// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace 
#nullable restore
#line 2 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\VezaGridLookupEdit.razor"
           VezaVI.Light.Components

#line default
#line hidden
#nullable disable
{
    #line default
    using global::System.Collections.Generic;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using System.Net.Http

#nullable disable
    ;
#nullable restore
#line 2 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms

#nullable disable
    ;
#nullable restore
#line 3 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing

#nullable disable
    ;
#nullable restore
#line 4 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using Microsoft.AspNetCore.Components.Web

#nullable disable
    ;
#nullable restore
#line 5 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using Microsoft.JSInterop

#nullable disable
    ;
#nullable restore
#line 6 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using Microsoft.AspNetCore.Authorization

#nullable disable
    ;
#nullable restore
#line 7 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using System.Text.Json

#nullable disable
    ;
#nullable restore
#line 8 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using System.Net.Http.Headers

#nullable disable
    ;
#nullable restore
#line 9 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using VezaVI.Light.Shared

#nullable disable
    ;
#nullable restore
#line 10 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using Blazored.Modal

#nullable disable
    ;
#nullable restore
#line 11 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using Blazored.Modal.Services

#nullable disable
    ;
#nullable restore
#line 12 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using System.Linq

#nullable disable
    ;
#nullable restore
#line 13 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using Blazored.LocalStorage

#nullable disable
    ;
#nullable restore
#line 14 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using System.Text

#nullable disable
    ;
#nullable restore
#line 15 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using System.Net.Http.Json

#nullable disable
    ;
#nullable restore
#line 16 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization

#nullable disable
    ;
#nullable restore
#line 17 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using SixLabors.ImageSharp.Processing

#nullable disable
    ;
#nullable restore
#line 18 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using SixLabors.ImageSharp.Formats

#nullable disable
    ;
#nullable restore
#line 19 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using System

#nullable disable
    ;
#nullable restore
#line 20 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\_Imports.razor"
using SixLabors.ImageSharp

#line default
#line hidden
#nullable disable
    ;
    #nullable restore
    public partial class VezaGridLookupEdit<
#nullable restore
#line 1 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\VezaGridLookupEdit.razor"
           TItem

#line default
#line hidden
#nullable disable
    > : MaintenanceGridBase
    #nullable disable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 107 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\VezaGridLookupEdit.razor"
 
        private bool IsOpen { get; set; } = false;

        PaginatedList<TItem> page;
        private string SearchText { get; set; }
        private string CurrentSearchText { get; set; }

        private List<MaintenanceGridColumn> columns = new List<MaintenanceGridColumn>();
        public override void AddColumn(MaintenanceGridColumn column)
        {
            if (columns.FirstOrDefault(x => x.PropertyName == column.PropertyName) == null)
            {
                columns.Add(column);
                DisplayText = GetDisplayText();
                StateHasChanged();
            }
        }

        public override void RemoveColumn(MaintenanceGridColumn column)
        {
            columns.Remove(column);
            DisplayText = GetDisplayText();
            StateHasChanged();
        }

        [Parameter]
        public RenderFragment Columns { get; set; }
        [Parameter]
        public string Caption { get; set; }
        [Parameter]
        public string Description { get; set; }
        [Parameter]
        public int DefaultPageSize { get; set; } = 10;
        [Parameter]
        public bool ReadOnly { get; set; } = false;
        public string DisplayText { get; set; }
        public bool initialized { get; set; } = false;

        private IList<VezaVIGridFilter> _gridFilter = new List<VezaVIGridFilter>();
        [Parameter]
        public IList<VezaVIGridFilter> GridFilter
        {
            get
            {
                return _gridFilter;
            }
            set
            {
                if (_gridFilter == value)
                    return;
                _gridFilter = value;
                new Task(async () =>
                {
                    await Refresh();
                }).Start();
            }
        }

        public delegate Task RefreshGridDataSource();
        public event RefreshGridDataSource OnRefresh;

        private async Task RefreshScreen()
        {
            await InvokeAsync(() => StateHasChanged());
        }

        protected async override Task OnInitializedAsync()
        {
            OnRefresh += RefreshScreen;
            if (!initialized)
                await Refresh();
        }

        public async Task RefreshGrid(VezaModalSubmitEventArgs<TItem> args)
        {
            await Refresh();
            OnRefresh?.Invoke();
        }

        public async Task Refresh()
        {
            initialized = true;
            page = await VezaDataService.GetListAsync(GridFilter, PageNumber, DefaultPageSize, CurrentSortField, CurrentSortOrder, CurrentSearchText);
            OnRefresh?.Invoke();
        }

        public override async Task SortAsync(string sortField)
        {
            if (sortField.Equals(CurrentSortField))
            {
                CurrentSortOrder = CurrentSortOrder.Equals("Asc") ? "Desc" : "Asc";
            }
            else
            {
                CurrentSortField = sortField;
                CurrentSortOrder = "Asc";
            }
            await Refresh();
        }

        public override string SortIndicator(string sortField)
        {
            if (sortField.Equals(CurrentSortField))
            {
                return CurrentSortOrder.Equals("Asc") ? "oi oi-sort-ascending" : "oi oi-sort-descending";
            }
            return "oi oi-elevator";
        }

        public async void PageIndexChanged(int newPageNumber)
        {
            if (newPageNumber < 1 || newPageNumber > page.TotalPages)
            {
                return;
            }
            PageNumber = newPageNumber;
            await Refresh();
        }

        public async void Search()
        {
            PageNumber = 1;
            CurrentSearchText = SearchText;
            await Refresh();
        }

        public async Task Toggle(bool isOpen)
        {
            IsOpen = isOpen;
            await RefreshScreen();
        }

        [Parameter]
        public EventCallback<Guid?> ValueChanged { get; set; }

        private Guid? _value = null;
        [Parameter]
        public Guid? Value
        {
            get
            {
                return _value;
            }
            set
            {
                if (_value == value)
                    return;
                _value = value;
                new Task(async () =>
                {
                    await GetSelectedItem();
                }).Start();
                ValueChanged.InvokeAsync(value);
            }
        }

        private TItem _selectedItem { get; set; }
        private async Task SelectItem(TItem item)
        {
            _selectedItem = item;
            DisplayText = GetDisplayText();
            Value = (item != null) ? item.GetID() : null;
            await Toggle(false);
        }

        private async Task GetSelectedItem()
        {
            if ((_selectedItem == null) || (_value != (Guid?)_selectedItem.GetID()))
            {
                if ((_value != null) && (_value != Guid.Empty))
                {
                    var item = await VezaDataService.GetAsync(_value);
                    await SelectItem(item);
                    StateHasChanged();
                }
                else
                {
                    await SelectItem(null);
                }
            }
        }

        private string GetDisplayText()
        {
            if (_selectedItem != null)
            {
                string displayValue = string.Empty;
                if (columns != null)
                {
                    foreach (var col in columns)
                    {
                        if (col.UseAsDisplay)
                        {
                            var prop = _selectedItem.GetType().GetProperty(col.PropertyName);
                            if (prop != null)
                            {
                                var value = prop.GetValue(_selectedItem);
                                if (displayValue != string.Empty)
                                    displayValue += " ";
                                displayValue += (value == null) ? string.Empty : value.ToString();
                            }
                            else
                            {
                                return "No property selected to display";
                            }
                        }
                    }
                }
                return displayValue;
            }
            return string.Empty;
        }
    

#line default
#line hidden
#nullable disable

        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line 6 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\VezaGridLookupEdit.razor"
        IJSRuntime

#line default
#line hidden
#nullable disable
         
#nullable restore
#line 6 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\VezaGridLookupEdit.razor"
                   JSRuntime

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line 5 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\VezaGridLookupEdit.razor"
        NavigationManager

#line default
#line hidden
#nullable disable
         
#nullable restore
#line 5 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\VezaGridLookupEdit.razor"
                          NavigationManager

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line 3 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\VezaGridLookupEdit.razor"
        IVezaDataService<TItem>

#line default
#line hidden
#nullable disable
         
#nullable restore
#line 3 "D:\Code\CloudberrySoftwareSolutions\SST-Law\ContractBuilder-main\SST\Shared Libraries\VezaVI.Components\VezaGridLookupEdit.razor"
                                VezaDataService

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
    }
}
#pragma warning restore 1591
