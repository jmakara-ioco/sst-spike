using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore.Internal;
using SST.Server.Data;
using SST.Shared;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Threading.Tasks;
using System.Transactions;
using VezaVI.Light.ServerExtensions;
using VezaVI.Light.Shared;

namespace SST.Server
{
    [Route("api/Customers")]
    [ApiController]
    public class CustomerController : VezaVIController<Customer>
    {
        private readonly UserManager<ApplicationUser> _userManager;
        public CustomerController(ApplicationDbContext context, UserManager<ApplicationUser> userManager) : base(context)
        {
            _userManager = userManager;
        }

        private readonly IDictionary<string, object> _items = new Dictionary<string, object>();


        public async override Task<VezaAPISubmitResult> Post([FromBody] Customer item)
        {
            using (TransactionScope scope = new TransactionScope(TransactionScopeAsyncFlowOption.Enabled))
            {
                foreach (var udf in item.UserDefinedFields)
                {
                    var udfValue = _context.Set<CustomerDataFieldValue>().FirstOrDefault(x => x.CustomerDataFieldID == udf.Key && x.CustomerID == item.ID);
                    if (udfValue == null)
                    {
                        _context.Set<CustomerDataFieldValue>().Add(new CustomerDataFieldValue()
                        {
                            CustomerID = item.ID,
                            CustomerDataFieldID = udf.Key,
                            Value = udf.Value
                        });
                    }
                    else
                    {
                        udfValue.Value = udf.Value;
                    }
                }
                var CustomerResult = await base.Post(item);
                ApplicationUser usr = new ApplicationUser();
                usr.UserName = item.Email;
                usr.FirstName = item.FirstName;
                usr.LastName = item.LastName;
                usr.Email = item.Email;
                usr.CustomerID = item.ID;
                var result = await _userManager.CreateAsync(usr, "Password@1");
                Firm firm = _context.Set<Firm>().FirstOrDefault(x => x.ID == item.FirmID);
                if (!result.Succeeded)
                {
                    var errors = result.Errors.Select(x => x.Description).FirstOrDefault();
                    return VezaAPISubmitResult.Failed(errors);
                }
                else
                {
                    await _userManager.AddToRoleAsync(usr, RoleConstants.ClientUser);

                    Mailer mailer = new Mailer();
                    string HostAddress = "kunlun.aserv.co.za";
                    string HeaderImage = "";
                    string Body = firm.FirmName + " has added you as a client. Please click on the following <a href='https://localhost:44323/login'>link</a> to log in to your profile";
                    string FooterImage = "";
                    string FromAddress = "test@n-abler.biz";
                    int Port = 25;
                    string Username = "test@n-abler.biz";
                    string Password = "Password@1";
                    await mailer.SendEmailSmtp(HostAddress, HeaderImage, Body, FooterImage, item.Email, FromAddress, "", "Password Reset Request", "Dear " + item.FirstName + " " + item.LastName,
                                            Port, Username, Password);
                }
                scope.Complete();
                return CustomerResult;
            }
        }


        /*Client Side*/
        public async override Task<VezaAPISubmitResult> Put(string id, [FromBody] Customer item)
        {
            using (TransactionScope scope = new TransactionScope(TransactionScopeAsyncFlowOption.Enabled))
            {
                foreach (var udf in item.UserDefinedFields)
                {
                    var udfValue = _context.Set<CustomerDataFieldValue>().FirstOrDefault(x => x.CustomerDataFieldID == udf.Key && x.CustomerID == item.ID);
                    if (udfValue == null)
                    {
                        _context.Set<CustomerDataFieldValue>().Add(new CustomerDataFieldValue()
                        {
                             CustomerID = item.ID,
                             CustomerDataFieldID = udf.Key,
                             Value = udf.Value
                        });
                    }
                    else
                    {
                        udfValue.Value = udf.Value;
                    }
                }
                var result = await base.Put(id, item);
                scope.Complete();
                return result;
            }
        }

        public async override Task<ActionResult<Customer>> GetByID(string id)
        {
            var entity = _context.Set<Customer>().FirstOrDefault(x => x.ID == new Guid(id));
            var udfs = _context.Set<CustomerDataField>().Where(x => x.FirmID == entity.FirmID);
            var custUdfValues = _context.Set<CustomerDataFieldValue>().Where(x => x.CustomerID == entity.ID);
            var query = from udf in udfs
                        join udfValues in custUdfValues on udf.ID equals udfValues.CustomerDataFieldID into gj
                        from custUdf in gj.DefaultIfEmpty()
                        select new CustomerUdfToken() { Key = udf.ID, Value = custUdf.Value };
            entity.UserDefinedFields = query.ToList();
            return entity;
        }
    }
}
