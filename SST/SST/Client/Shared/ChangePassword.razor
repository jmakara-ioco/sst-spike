@page "/changepassword"
@attribute [Authorize]
@inject NavigationManager NavigationManager
@layout MainLayout
@inject HttpClient HttpClient
@inject IProfileService ProfileService

<div class="card">
    @if (ShowErrors)
    {
        <div class="alert alert-danger" role="alert">
            <p>@Error</p>
        </div>
    }
    <div class="card-body">

        <h5 class="card-title">Manage your password</h5>
        <EditForm Model="changePasswordModel" OnValidSubmit="Update">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="CurrentPassword">Current Password</label>
                <InputText Id="CurrentPassword" type="Password" Class="form-control" @bind-Value="changePasswordModel.CurrentPassword" />
                <ValidationMessage For="@(() => changePasswordModel.CurrentPassword)" />
            </div>
            <div class="form-group">
                <label for="Password">New Password</label>
                <InputText Id="Password" type="Password" Class="form-control" @bind-Value="changePasswordModel.Password" />
                <ValidationMessage For="@(() => changePasswordModel.Password)" />
            </div>
            <div class="form-group">
                <label for="ConfirmPassword">Confirm Password</label>
                <InputText Id="ConfirmPassword" type="Password" Class="form-control" @bind-Value="changePasswordModel.ConfirmPassword"></InputText>
                <ValidationMessage For="@(() => changePasswordModel.ConfirmPassword)" />
            </div>
            <button type="submit" class="btn btn-primary">Update</button>
        </EditForm>
    </div>
</div>

@code {
    private ChangePasswordModel changePasswordModel = new ChangePasswordModel();
    private bool ShowErrors;
    private string Error = "";

    private async Task Update()
    {
        ShowErrors = false;

        var result = await ProfileService.UpdatePassword(changePasswordModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Errors.FirstOrDefault();
            ShowErrors = true;
        }
    }
}
