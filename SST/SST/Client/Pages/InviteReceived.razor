@page "/invitereceived"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ICustomRegistrationService  CustomerRegistrationService
@inject NavigationManager NavigationManager
@namespace SST.Client

<h3>InviteClient</h3>
<div>
    <div class="large-logo">
    </div>
    <div class="card">
        @if (ShowErrors)
        {
            <div class="alert alert-danger" role="alert">
                @foreach (var error in Errors)
                {
                    <p>@error</p>
                }
            </div>
        }
        <div class="card-body">
            @if (CompanyID == Guid.Empty)
            {
                <h5 class="card-title">Enter your Customer details to Send Invite.</h5>
                <EditForm Model="CustomerRegisterModel" OnValidSubmit="HandleRegistration">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label for="email">Email address</label>
                        <InputText Id="email" class="form-control" @bind-Value="CustomerRegisterModel.Email" />
                        <ValidationMessage For="@(() => CustomerRegisterModel.Email)" />
                    </div>


                    <div class="form-group">
                        <label for="password" requiered>Password</label>
                        <InputText Id="password" type="password" class="form-control" required @bind-Value="CustomerRegisterModel.Password" />
                        <ValidationMessage For="@(() => CustomerRegisterModel.Password)" />
                    </div>
                    <div class="form-group">
                        <label for="password" >Confirm Password</label>
                        <InputText Id="password" type="password" class="form-control" required @bind-Value="CustomerRegisterModel.ConfirmPassword" />
                        <ValidationMessage For="@(() => CustomerRegisterModel.ConfirmPassword)" />
                    </div>

                    <button type="submit" class="btn btn-primary">Sign Up</button>
                    <p>By creating an Account you agree to our <a href="#">Terms & Privacy</a>.</p>
                </EditForm>
            }
            else
            {

            }
        </div>
    </div>
</div>

@code {

    [Parameter]
    public Guid CompanyID { get; set; } = Guid.Empty;

    private CustomerRegisterModel CustomerRegisterModel = new CustomerRegisterModel();
    private bool ShowErrors;
    private IEnumerable<string> Errors;

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var result = await CustomerRegistrationService.RegisterCustomer(CustomerRegisterModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        }
    }
}
